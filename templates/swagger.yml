  swagger: "2.0"
  info: 
    description: "Go Todo REST Api"
    version: "1.0.0"
    title: "Go Todo API"
    contact: 
      email: "l_tung@stagegroup.jp"
    license: 
      name: "Released under the MIT License."
      url: "https://opensource.org/licenses/MIT"
  host: "100.94.47.221"
  basePath: "/v1"
  tags: 
    - 
      name: "todo"
      description: "Todo API"
      externalDocs: 
        description: "comming soon"
        url: "xxxx"
  schemes: 
    - "https"
  paths: 
    /todos: 
      get: 
        tags: 
          - "todo"
        summary: "Get todo list"
        description: "Returns all todo records that have in root group"
        produces: 
          - "application/json"
        responses: 
          200: 
            description: "A list of todos."
            schema:
              title: "ArrayOfTodo"
              type: "array"
              items:
                $ref: "#/definitions/Todo"
          default:
            description: "Unexpected error"
            schema:
              $ref: "#/definitions/Error"
      post: 
        tags: 
          - "todo"
        summary: "Create todo"
        description: "Create and Add todo a record to root group"
        produces: 
          - "application/json"
        parameters:
          - name: "title"
            in: "formData"
            description: "Title of the todo"
            required: true
            type: string
          - name: "todo_groups_id"
            in: "formData"
            description: "Id of todo group"
            type: integer
          - name: "color"
            in: "formData"
            description: "Color of the todo"
            type: string
          - name: "due_date"
            in: "formData"
            description: "Expire date of the todo"
            type: string
          - name: "marked"
            in: "formData"
            description: "Mark the todo as done"
            type: boolean
        responses:
          200:
            description: "A todo record added"
            schema:
              $ref: "#/definitions/Todo"
          422:
            description: "Missing parameters"
            schema:
              $ref: "#/definitions/ErrorMissingField"
          default:
            description: "Unexpected error"
            schema:
              $ref: "#/definitions/Error"
    /todos/{id}: 
      get: 
        tags: 
          - "todo"
        summary: "Get todo record"
        description: "Return a todo record"
        produces: 
          - "application/json"
        parameters:
          - name: "id"
            in: "path"
            description: "todo id"
            required: true
            type: "number"
        responses:
          200:
            description: "A todo record."
            schema:
              $ref: "#/definitions/Todo"
          500:
            description: "Couldn't find the todo"
            schema:
              $ref: "#/definitions/Error"
          default:
            description: "Unexpected error"
            schema:
              $ref: "#/definitions/Error"
      put: 
        tags: 
          - "todo"
        summary: "update a todo record"
        description: "Return the updated record"
        produces: 
          - "application/json"
        parameters:
          - name: "title"
            in: "formData"
            description: "Title of the todo"
            required: true
            type: string
          - name: "color"
            in: "formData"
            description: "Color of the todo"
            type: string
          - name: "due_date"
            in: "formData"
            description: "Expire date of the todo"
            type: string
          - name: "marked"
            in: "formData"
            description: "Mark the todo as done"
            type: boolean
          - name: "id"
            in: "path"
            description: "todo id"
            required: true
            type: "number"
        responses:
          200:
            description: "A todo record."
            schema:
              $ref: "#/definitions/Todo"
          422:
            description: "Missing parameters"
            schema:
              $ref: "#/definitions/ErrorMissingField"
          500:
            description: "Couldn't find the todo"
            schema:
              $ref: "#/definitions/Error"
          default:
            description: "Unexpected error"
            schema:
              $ref: "#/definitions/Error"
      delete: 
        tags: 
          - "todo"
        summary: "delete a todo record"
        description: "Return the deleted record"
        produces: 
          - "application/json"
        parameters:
          - name: "id"
            in: "path"
            description: "todo id"
            required: true
            type: "number"
        responses:
          200:
            description: "The deleted record."
            schema:
              $ref: "#/definitions/Todo"
          500:
            description: "Couldn't find the todo"
            schema:
              $ref: "#/definitions/Error"
          default:
            description: "Unexpected error"
            schema:
              $ref: "#/definitions/Error"
    /todos/{id}/move: 
      post: 
        tags: 
          - "todo"
        summary: "Move todo record to root group"
        description: "move a todo record to root group"
        produces: 
          - "application/json"
        parameters:
          - name: "prior_sibling_id"
            in: "formData"
            description: "Id of prior sibling Todo"
            type: "number"
          - name: "id"
            in: "path"
            description: "todo Id"
            required: true
            type: "number"
        responses:
          200:
            description: "A todo record added"
            schema:
              $ref: "#/definitions/Todo"
          500:
            description: "Couldn't find the todo"
            schema:
              $ref: "#/definitions/Error"
          default:
            description: "Unexpected error"
            schema:
              $ref: "#/definitions/Error"
  definitions:
    Todo:
      type: object
      properties:
        title:
          type: string
        todo_groups_id:
          type: string
        color:
          type: string
        due_date:
          type: string
          format: date
        sort_order:
          type: integer
        marked:
          type: boolean
    Error:
      type: "object"
      properties:
        message:
          type: "string"
    ErrorMissingField:
      type: object
      properties:
        title:
          type: array
          items:
            type: string
